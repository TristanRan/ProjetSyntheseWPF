<Page x:Class="ProjetSyntheseWPF.PageSalarie"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjetSyntheseWPF"
      mc:Ignorable="d"   
      Title="PageSalarie">
    <Page.Resources>

        <Style x:Key="trigger" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=checkBoxEdition, Path=IsChecked}" Value="True">
                    <Setter Property="IsReadOnly" Value="False"/>
                    <Setter Property="Background" Value="LightBlue"/> 
                    <Setter Property="BorderThickness" Value="2"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style x:Key="textBoxInError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                    Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="DtInError" TargetType="DatePicker">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                    Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="isCommercial" TargetType="TextBox">
           
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
            <Style.Triggers>
                <DataTrigger  Binding="{Binding Poste}" Value="Commercial">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Poste}" Value="Commercial"/>
                        <Condition Binding="{Binding ElementName=checkBoxEdition, Path=IsChecked}"  Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Setter Property="Background" Value="LightBlue"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="CellTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
            </Grid>
        </DataTemplate>


        <local:MainWindow x:Key="List" />
        
    </Page.Resources>



    <Grid x:Name="gridSalarie" HorizontalAlignment="Stretch"  MinWidth="700" MinHeight="750">
        <Grid.RowDefinitions>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="720*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ListView x:Name="lbSalaries" BorderThickness="5"  MinHeight="700" ItemTemplate="{DynamicResource CellTemplate}" SelectionMode="Multiple" FontSize="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,26,1,0.333" Grid.Column="1" Grid.Row="1" IsSynchronizedWithCurrentItem="False" >

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>

                <GridView>

                    <GridViewColumn Header="ID"  DisplayMemberBinding="{Binding Matricule}"/>
                    
                    <GridViewColumn Header="Nom"  >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource trigger}" Name="txtName" Text="{Binding Nom, Mode=TwoWay, ValidatesOnExceptions=True}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn Header="Prenom">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource trigger}"  Name="txtPrenom" Text="{Binding Prenom, Mode=TwoWay, ValidatesOnExceptions=True}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Date Naissance">
                        <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Style="{StaticResource trigger}"  Name="txtDateNaissance" Text="{Binding DateNaissance, Mode=TwoWay, ValidatesOnExceptions=True}" />
                        </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    
                    <GridViewColumn Header="Type"  DisplayMemberBinding="{Binding Poste}"/>
                        
                    <GridViewColumn Header="Salaire Brut">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource trigger}"  Name="txtboxSalaireBrut" Text="{Binding SalaireBrut, Mode=TwoWay, ValidatesOnExceptions=True}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Taux CS">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource trigger}"  Name="txtBoxTxCs" Text="{Binding TauxCS, Mode=TwoWay, ValidatesOnExceptions=True}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>


                    <GridViewColumn Header="Salaire Net"  DisplayMemberBinding="{Binding SalaireNet, Mode=OneWay}"/>

                    <GridViewColumn Header="CA" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource isCommercial}"  Name="txtBoxCA" Text="{Binding ChiffreAffaire, Mode=TwoWay, ValidatesOnExceptions=True}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Commission"  DisplayMemberBinding="{Binding Commission}" />
                    
                    
                    
                    <GridViewColumn x:Name="CheckBoxColumn" >
                        <GridViewColumn.Header>
                            <Grid >
                                <CheckBox  Tag="{Binding}" IsThreeState="False" />
                            </Grid>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid >
                                    <CheckBox  IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}"  IsThreeState="False" /> 
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Menu Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"  Grid.RowSpan="2" Background="White">
            <MenuItem Header="Ajouter Salarié" Height="26" Width="105" FontSize="14" Background="#FFE6E2E2">
                <MenuItem x:Name="addSalarie" Header="Ajouter salarié-salarié" HorizontalAlignment="Left" Click="addSalarie_Click"/>
                <MenuItem Header="Ajouter commercial" HorizontalAlignment="Left" Click="MenuItem_Click"/>
            </MenuItem>
            <Button x:Name="btnEraseSalarie_Copy" Content="Supprimer sélection" FontSize="14" Click="btnEraseSalarie_Copy_Click" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" />
            <CheckBox x:Name="checkBoxEdition" Content="Mode Edition" Width="97"/>
        </Menu>
    </Grid>
</Page>
